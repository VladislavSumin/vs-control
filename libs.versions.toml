[versions]
vs-core = "0.0.1"

# Kotlin
kotlin-io = "0.8.0"
kotlin-atomicfu = "0.29.0"

# Gradle plugins
gradlePlugins-detekt = "1.23.8"
gradlePlugins-modulesGraphAssert = "2.7.1"

# Android
android-activity-compose = "1.10.1"
android-datastore = "1.1.7"

# Other
ktor = "3.2.3"
sqldelight = "2.1.0"

# Testing
testing-mockk = "1.14.5"
testing-junit5-core = "5.13.4"
testing-junit5-platformSuite = "1.13.4"
# TODO заменить на mockk
testing-mockito-core = "5.18.0"
testing-mockito-kotlin = "6.0.0"
testing-turbine = "1.2.1"

[libraries]

# Gradle plugins
gradlePlugins-kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "kotlin-atomicfu" }
gradlePlugins-sqldelight = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "gradlePlugins-detekt" }
gradlePlugins-modulesGraphAssert = { module = "com.jraska.module.graph.assertion:plugin", version.ref = "gradlePlugins-modulesGraphAssert" }

# VS Core
vs-core-collections-tree = { module = "ru.vladislavsumin.core.collections:tree", version.ref = "vs-core" }

vs-core-decompose-components = { module = "ru.vladislavsumin.core.decompose:components", version.ref = "vs-core" }
vs-core-decompose-compose = { module = "ru.vladislavsumin.core.decompose:compose", version.ref = "vs-core" }
vs-core-decompose-test = { module = "ru.vladislavsumin.core.decompose:test", version.ref = "vs-core" }

vs-core-di = { module = "ru.vladislavsumin.core:di", version.ref = "vs-core" }

vs-core-factoryGenerator-api = { module = "ru.vladislavsumin.core.factory-generator:api", version.ref = "vs-core" }
vs-core-factoryGenerator-ksp = { module = "ru.vladislavsumin.core.factory-generator:ksp", version.ref = "vs-core" }

vs-core-ksp-utils = { module = "ru.vladislavsumin.core.ksp:utils", version.ref = "vs-core" }

vs-core-logger-api = { module = "ru.vladislavsumin.core.logger:api", version.ref = "vs-core" }
vs-core-logger-platform = { module = "ru.vladislavsumin.core.logger:platform", version.ref = "vs-core" }

vs-core-navigation-api = { module = "ru.vladislavsumin.core.navigation:api", version.ref = "vs-core" }
vs-core-navigation-impl = { module = "ru.vladislavsumin.core.navigation:impl", version.ref = "vs-core" }
vs-core-navigation-debug = { module = "ru.vladislavsumin.core.navigation:debug", version.ref = "vs-core" }
vs-core-navigation-di = { module = "ru.vladislavsumin.core.navigation:di", version.ref = "vs-core" }
vs-core-navigation-factoryGenerator-api = { module = "ru.vladislavsumin.core.navigation.factory-generator:api", version.ref = "vs-core" }
vs-core-navigation-factoryGenerator-ksp = { module = "ru.vladislavsumin.core.navigation.factory-generator:ksp", version.ref = "vs-core" }

vs-core-uikit-graph = { module = "ru.vladislavsumin.core.uikit:graph", version.ref = "vs-core" }

# Kotlin
kotlin-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlin-io" }
kotlin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlin-atomicfu" }

# Ktor
ktor-core-serialization-protobuf = { module = "io.ktor:ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
ktor-network-tlsCertificates = { module = "io.ktor:ktor-network-tls-certificates", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-websocket = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-websocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }

# Sqldelight
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqljs = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# Android
android-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "android-activity-compose" }
android-datastore-core = { module = "androidx.datastore:datastore", version.ref = "android-datastore" }
android-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "android-datastore" }

# Checkstyle
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "gradlePlugins-detekt" }
detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "gradlePlugins-detekt" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "gradlePlugins-detekt" }

# Testing
testing-mockk = { module = "io.mockk:mockk", version.ref = "testing-mockk" }
testing-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "testing-junit5-core" }
testing-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "testing-junit5-core" }
testing-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "testing-junit5-core" }
testing-jupiter-platformSuite = { module = "org.junit.platform:junit-platform-suite", version.ref = "testing-junit5-platformSuite" }
testing-mockito-core = { module = "org.mockito:mockito-core", version.ref = "testing-mockito-core" }
testing-mockito-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "testing-mockito-core" }
testing-mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "testing-mockito-kotlin" }
testing-turbine = { module = "app.cash.turbine:turbine", version.ref = "testing-turbine" }
